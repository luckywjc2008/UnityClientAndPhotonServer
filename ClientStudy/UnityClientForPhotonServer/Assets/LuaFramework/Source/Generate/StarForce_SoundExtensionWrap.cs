//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class StarForce_SoundExtensionWrap
{
	public static void Register(LuaState L)
	{
		L.BeginStaticLibs("SoundExtension");
		L.RegFunction("PlayMusic", PlayMusic);
		L.RegFunction("StopMusic", StopMusic);
		L.RegFunction("PlaySound", PlaySound);
		L.RegFunction("PlayUISound", PlayUISound);
		L.RegFunction("IsMuted", IsMuted);
		L.RegFunction("Mute", Mute);
		L.RegFunction("GetVolume", GetVolume);
		L.RegFunction("SetVolume", SetVolume);
		L.EndStaticLibs();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int PlayMusic(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			UnityGameFramework.Runtime.SoundComponent arg0 = (UnityGameFramework.Runtime.SoundComponent)ToLua.CheckUnityObject(L, 1, typeof(UnityGameFramework.Runtime.SoundComponent));
			int arg1 = (int)LuaDLL.luaL_checknumber(L, 2);
			object arg2 = ToLua.ToVarObject(L, 3);
			System.Nullable<int> o = StarForce.SoundExtension.PlayMusic(arg0, arg1, arg2);
			ToLua.PushObject(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int StopMusic(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			UnityGameFramework.Runtime.SoundComponent arg0 = (UnityGameFramework.Runtime.SoundComponent)ToLua.CheckUnityObject(L, 1, typeof(UnityGameFramework.Runtime.SoundComponent));
			StarForce.SoundExtension.StopMusic(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int PlaySound(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 4);
			UnityGameFramework.Runtime.SoundComponent arg0 = (UnityGameFramework.Runtime.SoundComponent)ToLua.CheckUnityObject(L, 1, typeof(UnityGameFramework.Runtime.SoundComponent));
			int arg1 = (int)LuaDLL.luaL_checknumber(L, 2);
			StarForce.Entity arg2 = (StarForce.Entity)ToLua.CheckUnityObject(L, 3, typeof(StarForce.Entity));
			object arg3 = ToLua.ToVarObject(L, 4);
			System.Nullable<int> o = StarForce.SoundExtension.PlaySound(arg0, arg1, arg2, arg3);
			ToLua.PushObject(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int PlayUISound(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			UnityGameFramework.Runtime.SoundComponent arg0 = (UnityGameFramework.Runtime.SoundComponent)ToLua.CheckUnityObject(L, 1, typeof(UnityGameFramework.Runtime.SoundComponent));
			int arg1 = (int)LuaDLL.luaL_checknumber(L, 2);
			object arg2 = ToLua.ToVarObject(L, 3);
			System.Nullable<int> o = StarForce.SoundExtension.PlayUISound(arg0, arg1, arg2);
			ToLua.PushObject(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int IsMuted(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityGameFramework.Runtime.SoundComponent arg0 = (UnityGameFramework.Runtime.SoundComponent)ToLua.CheckUnityObject(L, 1, typeof(UnityGameFramework.Runtime.SoundComponent));
			string arg1 = ToLua.CheckString(L, 2);
			bool o = StarForce.SoundExtension.IsMuted(arg0, arg1);
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Mute(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			UnityGameFramework.Runtime.SoundComponent arg0 = (UnityGameFramework.Runtime.SoundComponent)ToLua.CheckUnityObject(L, 1, typeof(UnityGameFramework.Runtime.SoundComponent));
			string arg1 = ToLua.CheckString(L, 2);
			bool arg2 = LuaDLL.luaL_checkboolean(L, 3);
			StarForce.SoundExtension.Mute(arg0, arg1, arg2);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetVolume(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityGameFramework.Runtime.SoundComponent arg0 = (UnityGameFramework.Runtime.SoundComponent)ToLua.CheckUnityObject(L, 1, typeof(UnityGameFramework.Runtime.SoundComponent));
			string arg1 = ToLua.CheckString(L, 2);
			float o = StarForce.SoundExtension.GetVolume(arg0, arg1);
			LuaDLL.lua_pushnumber(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetVolume(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			UnityGameFramework.Runtime.SoundComponent arg0 = (UnityGameFramework.Runtime.SoundComponent)ToLua.CheckUnityObject(L, 1, typeof(UnityGameFramework.Runtime.SoundComponent));
			string arg1 = ToLua.CheckString(L, 2);
			float arg2 = (float)LuaDLL.luaL_checknumber(L, 3);
			StarForce.SoundExtension.SetVolume(arg0, arg1, arg2);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}


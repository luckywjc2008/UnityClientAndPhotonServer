//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class UnityGameFramework_Runtime_BaseComponentWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(UnityGameFramework.Runtime.BaseComponent), typeof(UnityGameFramework.Runtime.GameFrameworkComponent));
		L.RegFunction("PauseGame", PauseGame);
		L.RegFunction("ResumeGame", ResumeGame);
		L.RegFunction("ResetNormalGameSpeed", ResetNormalGameSpeed);
		L.RegFunction("__eq", op_Equality);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("GameVersion", get_GameVersion, set_GameVersion);
		L.RegVar("InternalApplicationVersion", get_InternalApplicationVersion, set_InternalApplicationVersion);
		L.RegVar("EditorResourceMode", get_EditorResourceMode, set_EditorResourceMode);
		L.RegVar("EditorLanguage", get_EditorLanguage, set_EditorLanguage);
		L.RegVar("EditorResourceHelper", get_EditorResourceHelper, set_EditorResourceHelper);
		L.RegVar("FrameRate", get_FrameRate, set_FrameRate);
		L.RegVar("GameSpeed", get_GameSpeed, set_GameSpeed);
		L.RegVar("IsGamePaused", get_IsGamePaused, null);
		L.RegVar("IsNormalGameSpeed", get_IsNormalGameSpeed, null);
		L.RegVar("RunInBackground", get_RunInBackground, set_RunInBackground);
		L.RegVar("NeverSleep", get_NeverSleep, set_NeverSleep);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int PauseGame(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			UnityGameFramework.Runtime.BaseComponent obj = (UnityGameFramework.Runtime.BaseComponent)ToLua.CheckObject(L, 1, typeof(UnityGameFramework.Runtime.BaseComponent));
			obj.PauseGame();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ResumeGame(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			UnityGameFramework.Runtime.BaseComponent obj = (UnityGameFramework.Runtime.BaseComponent)ToLua.CheckObject(L, 1, typeof(UnityGameFramework.Runtime.BaseComponent));
			obj.ResumeGame();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ResetNormalGameSpeed(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			UnityGameFramework.Runtime.BaseComponent obj = (UnityGameFramework.Runtime.BaseComponent)ToLua.CheckObject(L, 1, typeof(UnityGameFramework.Runtime.BaseComponent));
			obj.ResetNormalGameSpeed();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_GameVersion(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityGameFramework.Runtime.BaseComponent obj = (UnityGameFramework.Runtime.BaseComponent)o;
			string ret = obj.GameVersion;
			LuaDLL.lua_pushstring(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index GameVersion on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_InternalApplicationVersion(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityGameFramework.Runtime.BaseComponent obj = (UnityGameFramework.Runtime.BaseComponent)o;
			int ret = obj.InternalApplicationVersion;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index InternalApplicationVersion on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_EditorResourceMode(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityGameFramework.Runtime.BaseComponent obj = (UnityGameFramework.Runtime.BaseComponent)o;
			bool ret = obj.EditorResourceMode;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index EditorResourceMode on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_EditorLanguage(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityGameFramework.Runtime.BaseComponent obj = (UnityGameFramework.Runtime.BaseComponent)o;
			GameFramework.Localization.Language ret = obj.EditorLanguage;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index EditorLanguage on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_EditorResourceHelper(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityGameFramework.Runtime.BaseComponent obj = (UnityGameFramework.Runtime.BaseComponent)o;
			GameFramework.Resource.IResourceManager ret = obj.EditorResourceHelper;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index EditorResourceHelper on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_FrameRate(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityGameFramework.Runtime.BaseComponent obj = (UnityGameFramework.Runtime.BaseComponent)o;
			int ret = obj.FrameRate;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index FrameRate on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_GameSpeed(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityGameFramework.Runtime.BaseComponent obj = (UnityGameFramework.Runtime.BaseComponent)o;
			float ret = obj.GameSpeed;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index GameSpeed on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_IsGamePaused(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityGameFramework.Runtime.BaseComponent obj = (UnityGameFramework.Runtime.BaseComponent)o;
			bool ret = obj.IsGamePaused;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index IsGamePaused on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_IsNormalGameSpeed(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityGameFramework.Runtime.BaseComponent obj = (UnityGameFramework.Runtime.BaseComponent)o;
			bool ret = obj.IsNormalGameSpeed;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index IsNormalGameSpeed on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_RunInBackground(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityGameFramework.Runtime.BaseComponent obj = (UnityGameFramework.Runtime.BaseComponent)o;
			bool ret = obj.RunInBackground;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index RunInBackground on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_NeverSleep(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityGameFramework.Runtime.BaseComponent obj = (UnityGameFramework.Runtime.BaseComponent)o;
			bool ret = obj.NeverSleep;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index NeverSleep on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_GameVersion(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityGameFramework.Runtime.BaseComponent obj = (UnityGameFramework.Runtime.BaseComponent)o;
			string arg0 = ToLua.CheckString(L, 2);
			obj.GameVersion = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index GameVersion on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_InternalApplicationVersion(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityGameFramework.Runtime.BaseComponent obj = (UnityGameFramework.Runtime.BaseComponent)o;
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.InternalApplicationVersion = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index InternalApplicationVersion on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_EditorResourceMode(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityGameFramework.Runtime.BaseComponent obj = (UnityGameFramework.Runtime.BaseComponent)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.EditorResourceMode = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index EditorResourceMode on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_EditorLanguage(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityGameFramework.Runtime.BaseComponent obj = (UnityGameFramework.Runtime.BaseComponent)o;
			GameFramework.Localization.Language arg0 = (GameFramework.Localization.Language)ToLua.CheckObject(L, 2, typeof(GameFramework.Localization.Language));
			obj.EditorLanguage = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index EditorLanguage on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_EditorResourceHelper(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityGameFramework.Runtime.BaseComponent obj = (UnityGameFramework.Runtime.BaseComponent)o;
			GameFramework.Resource.IResourceManager arg0 = (GameFramework.Resource.IResourceManager)ToLua.CheckObject(L, 2, typeof(GameFramework.Resource.IResourceManager));
			obj.EditorResourceHelper = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index EditorResourceHelper on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_FrameRate(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityGameFramework.Runtime.BaseComponent obj = (UnityGameFramework.Runtime.BaseComponent)o;
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.FrameRate = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index FrameRate on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_GameSpeed(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityGameFramework.Runtime.BaseComponent obj = (UnityGameFramework.Runtime.BaseComponent)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.GameSpeed = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index GameSpeed on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_RunInBackground(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityGameFramework.Runtime.BaseComponent obj = (UnityGameFramework.Runtime.BaseComponent)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.RunInBackground = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index RunInBackground on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_NeverSleep(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityGameFramework.Runtime.BaseComponent obj = (UnityGameFramework.Runtime.BaseComponent)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.NeverSleep = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index NeverSleep on a nil value" : e.Message);
		}
	}
}


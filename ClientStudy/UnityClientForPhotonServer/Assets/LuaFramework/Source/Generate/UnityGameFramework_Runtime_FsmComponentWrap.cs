//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class UnityGameFramework_Runtime_FsmComponentWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(UnityGameFramework.Runtime.FsmComponent), typeof(UnityGameFramework.Runtime.GameFrameworkComponent));
		L.RegFunction("HasFsm", HasFsm);
		L.RegFunction("GetFsm", GetFsm);
		L.RegFunction("GetAllFsms", GetAllFsms);
		L.RegFunction("DestroyFsm", DestroyFsm);
		L.RegFunction("__eq", op_Equality);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("Count", get_Count, null);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int HasFsm(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 2 && TypeChecker.CheckTypes(L, 1, typeof(UnityGameFramework.Runtime.FsmComponent), typeof(System.Type)))
			{
				UnityGameFramework.Runtime.FsmComponent obj = (UnityGameFramework.Runtime.FsmComponent)ToLua.ToObject(L, 1);
				System.Type arg0 = (System.Type)ToLua.ToObject(L, 2);
				bool o = obj.HasFsm(arg0);
				LuaDLL.lua_pushboolean(L, o);
				return 1;
			}
			else if (count == 3 && TypeChecker.CheckTypes(L, 1, typeof(UnityGameFramework.Runtime.FsmComponent), typeof(System.Type), typeof(string)))
			{
				UnityGameFramework.Runtime.FsmComponent obj = (UnityGameFramework.Runtime.FsmComponent)ToLua.ToObject(L, 1);
				System.Type arg0 = (System.Type)ToLua.ToObject(L, 2);
				string arg1 = ToLua.ToString(L, 3);
				bool o = obj.HasFsm(arg0, arg1);
				LuaDLL.lua_pushboolean(L, o);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: UnityGameFramework.Runtime.FsmComponent.HasFsm");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetFsm(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 2 && TypeChecker.CheckTypes(L, 1, typeof(UnityGameFramework.Runtime.FsmComponent), typeof(System.Type)))
			{
				UnityGameFramework.Runtime.FsmComponent obj = (UnityGameFramework.Runtime.FsmComponent)ToLua.ToObject(L, 1);
				System.Type arg0 = (System.Type)ToLua.ToObject(L, 2);
				GameFramework.Fsm.FsmBase o = obj.GetFsm(arg0);
				ToLua.PushObject(L, o);
				return 1;
			}
			else if (count == 3 && TypeChecker.CheckTypes(L, 1, typeof(UnityGameFramework.Runtime.FsmComponent), typeof(System.Type), typeof(string)))
			{
				UnityGameFramework.Runtime.FsmComponent obj = (UnityGameFramework.Runtime.FsmComponent)ToLua.ToObject(L, 1);
				System.Type arg0 = (System.Type)ToLua.ToObject(L, 2);
				string arg1 = ToLua.ToString(L, 3);
				GameFramework.Fsm.FsmBase o = obj.GetFsm(arg0, arg1);
				ToLua.PushObject(L, o);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: UnityGameFramework.Runtime.FsmComponent.GetFsm");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetAllFsms(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			UnityGameFramework.Runtime.FsmComponent obj = (UnityGameFramework.Runtime.FsmComponent)ToLua.CheckObject(L, 1, typeof(UnityGameFramework.Runtime.FsmComponent));
			GameFramework.Fsm.FsmBase[] o = obj.GetAllFsms();
			ToLua.Push(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int DestroyFsm(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 2 && TypeChecker.CheckTypes(L, 1, typeof(UnityGameFramework.Runtime.FsmComponent), typeof(GameFramework.Fsm.FsmBase)))
			{
				UnityGameFramework.Runtime.FsmComponent obj = (UnityGameFramework.Runtime.FsmComponent)ToLua.ToObject(L, 1);
				GameFramework.Fsm.FsmBase arg0 = (GameFramework.Fsm.FsmBase)ToLua.ToObject(L, 2);
				bool o = obj.DestroyFsm(arg0);
				LuaDLL.lua_pushboolean(L, o);
				return 1;
			}
			else if (count == 2 && TypeChecker.CheckTypes(L, 1, typeof(UnityGameFramework.Runtime.FsmComponent), typeof(System.Type)))
			{
				UnityGameFramework.Runtime.FsmComponent obj = (UnityGameFramework.Runtime.FsmComponent)ToLua.ToObject(L, 1);
				System.Type arg0 = (System.Type)ToLua.ToObject(L, 2);
				bool o = obj.DestroyFsm(arg0);
				LuaDLL.lua_pushboolean(L, o);
				return 1;
			}
			else if (count == 3 && TypeChecker.CheckTypes(L, 1, typeof(UnityGameFramework.Runtime.FsmComponent), typeof(System.Type), typeof(string)))
			{
				UnityGameFramework.Runtime.FsmComponent obj = (UnityGameFramework.Runtime.FsmComponent)ToLua.ToObject(L, 1);
				System.Type arg0 = (System.Type)ToLua.ToObject(L, 2);
				string arg1 = ToLua.ToString(L, 3);
				bool o = obj.DestroyFsm(arg0, arg1);
				LuaDLL.lua_pushboolean(L, o);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: UnityGameFramework.Runtime.FsmComponent.DestroyFsm");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Count(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityGameFramework.Runtime.FsmComponent obj = (UnityGameFramework.Runtime.FsmComponent)o;
			int ret = obj.Count;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index Count on a nil value" : e.Message);
		}
	}
}


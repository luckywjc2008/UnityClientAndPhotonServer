//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class UnityGameFramework_Runtime_Lua_LuaComponentWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(UnityGameFramework.Runtime.Lua.LuaComponent), typeof(UnityGameFramework.Runtime.GameFrameworkComponent));
		L.RegFunction("StartLuaVM", StartLuaVM);
		L.RegFunction("DoMainFile", DoMainFile);
		L.RegFunction("CollectGarbarge", CollectGarbarge);
		L.RegFunction("ClearLuaVM", ClearLuaVM);
		L.RegFunction("LoadFile", LoadFile);
		L.RegFunction("UnloadFile", UnloadFile);
		L.RegFunction("DoString", DoString);
		L.RegFunction("DoFile", DoFile);
		L.RegFunction("Init", Init);
		L.RegFunction("AddScriptContent", AddScriptContent);
		L.RegFunction("__eq", op_Equality);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("EditorSearchPaths", get_EditorSearchPaths, set_EditorSearchPaths);
		L.RegVar("LuaState", get_LuaState, null);
		L.RegFunction("OnLoadScriptSuccess", UnityGameFramework_Runtime_Lua_LuaComponent_OnLoadScriptSuccess);
		L.RegFunction("OnLoadScriptFailure", UnityGameFramework_Runtime_Lua_LuaComponent_OnLoadScriptFailure);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int StartLuaVM(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			UnityGameFramework.Runtime.Lua.LuaComponent obj = (UnityGameFramework.Runtime.Lua.LuaComponent)ToLua.CheckObject(L, 1, typeof(UnityGameFramework.Runtime.Lua.LuaComponent));
			obj.StartLuaVM();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int DoMainFile(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			UnityGameFramework.Runtime.Lua.LuaComponent obj = (UnityGameFramework.Runtime.Lua.LuaComponent)ToLua.CheckObject(L, 1, typeof(UnityGameFramework.Runtime.Lua.LuaComponent));
			obj.DoMainFile();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int CollectGarbarge(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			UnityGameFramework.Runtime.Lua.LuaComponent obj = (UnityGameFramework.Runtime.Lua.LuaComponent)ToLua.CheckObject(L, 1, typeof(UnityGameFramework.Runtime.Lua.LuaComponent));
			obj.CollectGarbarge();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ClearLuaVM(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			UnityGameFramework.Runtime.Lua.LuaComponent obj = (UnityGameFramework.Runtime.Lua.LuaComponent)ToLua.CheckObject(L, 1, typeof(UnityGameFramework.Runtime.Lua.LuaComponent));
			obj.ClearLuaVM();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LoadFile(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 5);
			UnityGameFramework.Runtime.Lua.LuaComponent obj = (UnityGameFramework.Runtime.Lua.LuaComponent)ToLua.CheckObject(L, 1, typeof(UnityGameFramework.Runtime.Lua.LuaComponent));
			string arg0 = ToLua.CheckString(L, 2);
			string arg1 = ToLua.CheckString(L, 3);
			UnityGameFramework.Runtime.Lua.LuaComponent.OnLoadScriptSuccess arg2 = null;
			LuaTypes funcType4 = LuaDLL.lua_type(L, 4);

			if (funcType4 != LuaTypes.LUA_TFUNCTION)
			{
				 arg2 = (UnityGameFramework.Runtime.Lua.LuaComponent.OnLoadScriptSuccess)ToLua.CheckObject(L, 4, typeof(UnityGameFramework.Runtime.Lua.LuaComponent.OnLoadScriptSuccess));
			}
			else
			{
				LuaFunction func = ToLua.ToLuaFunction(L, 4);
				arg2 = DelegateFactory.CreateDelegate(typeof(UnityGameFramework.Runtime.Lua.LuaComponent.OnLoadScriptSuccess), func) as UnityGameFramework.Runtime.Lua.LuaComponent.OnLoadScriptSuccess;
			}

			UnityGameFramework.Runtime.Lua.LuaComponent.OnLoadScriptFailure arg3 = null;
			LuaTypes funcType5 = LuaDLL.lua_type(L, 5);

			if (funcType5 != LuaTypes.LUA_TFUNCTION)
			{
				 arg3 = (UnityGameFramework.Runtime.Lua.LuaComponent.OnLoadScriptFailure)ToLua.CheckObject(L, 5, typeof(UnityGameFramework.Runtime.Lua.LuaComponent.OnLoadScriptFailure));
			}
			else
			{
				LuaFunction func = ToLua.ToLuaFunction(L, 5);
				arg3 = DelegateFactory.CreateDelegate(typeof(UnityGameFramework.Runtime.Lua.LuaComponent.OnLoadScriptFailure), func) as UnityGameFramework.Runtime.Lua.LuaComponent.OnLoadScriptFailure;
			}

			obj.LoadFile(arg0, arg1, arg2, arg3);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int UnloadFile(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityGameFramework.Runtime.Lua.LuaComponent obj = (UnityGameFramework.Runtime.Lua.LuaComponent)ToLua.CheckObject(L, 1, typeof(UnityGameFramework.Runtime.Lua.LuaComponent));
			string arg0 = ToLua.CheckString(L, 2);
			obj.UnloadFile(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int DoString(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			UnityGameFramework.Runtime.Lua.LuaComponent obj = (UnityGameFramework.Runtime.Lua.LuaComponent)ToLua.CheckObject(L, 1, typeof(UnityGameFramework.Runtime.Lua.LuaComponent));
			string arg0 = ToLua.CheckString(L, 2);
			string arg1 = ToLua.CheckString(L, 3);
			object[] o = obj.DoString(arg0, arg1);
			ToLua.Push(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int DoFile(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityGameFramework.Runtime.Lua.LuaComponent obj = (UnityGameFramework.Runtime.Lua.LuaComponent)ToLua.CheckObject(L, 1, typeof(UnityGameFramework.Runtime.Lua.LuaComponent));
			string arg0 = ToLua.CheckString(L, 2);
			object[] o = obj.DoFile(arg0);
			ToLua.Push(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Init(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			UnityGameFramework.Runtime.Lua.LuaComponent obj = (UnityGameFramework.Runtime.Lua.LuaComponent)ToLua.CheckObject(L, 1, typeof(UnityGameFramework.Runtime.Lua.LuaComponent));
			obj.Init();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int AddScriptContent(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			UnityGameFramework.Runtime.Lua.LuaComponent obj = (UnityGameFramework.Runtime.Lua.LuaComponent)ToLua.CheckObject(L, 1, typeof(UnityGameFramework.Runtime.Lua.LuaComponent));
			string arg0 = ToLua.CheckString(L, 2);
			byte[] arg1 = ToLua.CheckByteBuffer(L, 3);
			obj.AddScriptContent(arg0, arg1);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_EditorSearchPaths(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityGameFramework.Runtime.Lua.LuaComponent obj = (UnityGameFramework.Runtime.Lua.LuaComponent)o;
			string[] ret = obj.EditorSearchPaths;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index EditorSearchPaths on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_LuaState(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityGameFramework.Runtime.Lua.LuaComponent obj = (UnityGameFramework.Runtime.Lua.LuaComponent)o;
			LuaInterface.LuaState ret = obj.LuaState;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index LuaState on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_EditorSearchPaths(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityGameFramework.Runtime.Lua.LuaComponent obj = (UnityGameFramework.Runtime.Lua.LuaComponent)o;
			string[] arg0 = ToLua.CheckStringArray(L, 2);
			obj.EditorSearchPaths = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index EditorSearchPaths on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int UnityGameFramework_Runtime_Lua_LuaComponent_OnLoadScriptSuccess(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);
			LuaFunction func = ToLua.CheckLuaFunction(L, 1);

			if (count == 1)
			{
				Delegate arg1 = DelegateFactory.CreateDelegate(typeof(UnityGameFramework.Runtime.Lua.LuaComponent.OnLoadScriptSuccess), func);
				ToLua.Push(L, arg1);
			}
			else
			{
				LuaTable self = ToLua.CheckLuaTable(L, 2);
				Delegate arg1 = DelegateFactory.CreateDelegate(typeof(UnityGameFramework.Runtime.Lua.LuaComponent.OnLoadScriptSuccess), func, self);
				ToLua.Push(L, arg1);
			}
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int UnityGameFramework_Runtime_Lua_LuaComponent_OnLoadScriptFailure(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);
			LuaFunction func = ToLua.CheckLuaFunction(L, 1);

			if (count == 1)
			{
				Delegate arg1 = DelegateFactory.CreateDelegate(typeof(UnityGameFramework.Runtime.Lua.LuaComponent.OnLoadScriptFailure), func);
				ToLua.Push(L, arg1);
			}
			else
			{
				LuaTable self = ToLua.CheckLuaTable(L, 2);
				Delegate arg1 = DelegateFactory.CreateDelegate(typeof(UnityGameFramework.Runtime.Lua.LuaComponent.OnLoadScriptFailure), func, self);
				ToLua.Push(L, arg1);
			}
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}


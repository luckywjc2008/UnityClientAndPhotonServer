//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class UnityGameFramework_Runtime_NetworkComponentWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(UnityGameFramework.Runtime.NetworkComponent), typeof(UnityGameFramework.Runtime.GameFrameworkComponent));
		L.RegFunction("HasNetworkChannel", HasNetworkChannel);
		L.RegFunction("GetNetworkChannel", GetNetworkChannel);
		L.RegFunction("GetAllNetworkChannels", GetAllNetworkChannels);
		L.RegFunction("CreateNetworkChannel", CreateNetworkChannel);
		L.RegFunction("DestroyNetworkChannel", DestroyNetworkChannel);
		L.RegFunction("GetIPType", GetIPType);
		L.RegFunction("__eq", op_Equality);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("NetworkChannelCount", get_NetworkChannelCount, null);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int HasNetworkChannel(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityGameFramework.Runtime.NetworkComponent obj = (UnityGameFramework.Runtime.NetworkComponent)ToLua.CheckObject(L, 1, typeof(UnityGameFramework.Runtime.NetworkComponent));
			string arg0 = ToLua.CheckString(L, 2);
			bool o = obj.HasNetworkChannel(arg0);
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetNetworkChannel(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityGameFramework.Runtime.NetworkComponent obj = (UnityGameFramework.Runtime.NetworkComponent)ToLua.CheckObject(L, 1, typeof(UnityGameFramework.Runtime.NetworkComponent));
			string arg0 = ToLua.CheckString(L, 2);
			GameFramework.Network.INetworkChannel o = obj.GetNetworkChannel(arg0);
			ToLua.PushObject(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetAllNetworkChannels(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			UnityGameFramework.Runtime.NetworkComponent obj = (UnityGameFramework.Runtime.NetworkComponent)ToLua.CheckObject(L, 1, typeof(UnityGameFramework.Runtime.NetworkComponent));
			GameFramework.Network.INetworkChannel[] o = obj.GetAllNetworkChannels();
			ToLua.Push(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int CreateNetworkChannel(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			UnityGameFramework.Runtime.NetworkComponent obj = (UnityGameFramework.Runtime.NetworkComponent)ToLua.CheckObject(L, 1, typeof(UnityGameFramework.Runtime.NetworkComponent));
			string arg0 = ToLua.CheckString(L, 2);
			GameFramework.Network.INetworkChannelHelper arg1 = (GameFramework.Network.INetworkChannelHelper)ToLua.CheckObject(L, 3, typeof(GameFramework.Network.INetworkChannelHelper));
			GameFramework.Network.INetworkChannel o = obj.CreateNetworkChannel(arg0, arg1);
			ToLua.PushObject(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int DestroyNetworkChannel(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityGameFramework.Runtime.NetworkComponent obj = (UnityGameFramework.Runtime.NetworkComponent)ToLua.CheckObject(L, 1, typeof(UnityGameFramework.Runtime.NetworkComponent));
			string arg0 = ToLua.CheckString(L, 2);
			bool o = obj.DestroyNetworkChannel(arg0);
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetIPType(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 5);
			UnityGameFramework.Runtime.NetworkComponent obj = (UnityGameFramework.Runtime.NetworkComponent)ToLua.CheckObject(L, 1, typeof(UnityGameFramework.Runtime.NetworkComponent));
			string arg0 = ToLua.CheckString(L, 2);
			string arg1 = ToLua.CheckString(L, 3);
			string arg2 = null;
			System.Net.Sockets.AddressFamily arg3;
			obj.GetIPType(arg0, arg1, out arg2, out arg3);
			LuaDLL.lua_pushstring(L, arg2);
			ToLua.Push(L, arg3);
			return 2;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_NetworkChannelCount(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityGameFramework.Runtime.NetworkComponent obj = (UnityGameFramework.Runtime.NetworkComponent)o;
			int ret = obj.NetworkChannelCount;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index NetworkChannelCount on a nil value" : e.Message);
		}
	}
}


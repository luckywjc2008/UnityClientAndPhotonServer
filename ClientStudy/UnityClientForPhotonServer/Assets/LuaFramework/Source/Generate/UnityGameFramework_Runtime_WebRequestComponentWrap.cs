//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class UnityGameFramework_Runtime_WebRequestComponentWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(UnityGameFramework.Runtime.WebRequestComponent), typeof(UnityGameFramework.Runtime.GameFrameworkComponent));
		L.RegFunction("AddWebRequest", AddWebRequest);
		L.RegFunction("RemoveWebRequest", RemoveWebRequest);
		L.RegFunction("RemoveAllWebRequests", RemoveAllWebRequests);
		L.RegFunction("__eq", op_Equality);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("TotalAgentCount", get_TotalAgentCount, null);
		L.RegVar("FreeAgentCount", get_FreeAgentCount, null);
		L.RegVar("WorkingAgentCount", get_WorkingAgentCount, null);
		L.RegVar("WaitingTaskCount", get_WaitingTaskCount, null);
		L.RegVar("Timeout", get_Timeout, set_Timeout);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int AddWebRequest(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 2 && TypeChecker.CheckTypes(L, 1, typeof(UnityGameFramework.Runtime.WebRequestComponent), typeof(string)))
			{
				UnityGameFramework.Runtime.WebRequestComponent obj = (UnityGameFramework.Runtime.WebRequestComponent)ToLua.ToObject(L, 1);
				string arg0 = ToLua.ToString(L, 2);
				int o = obj.AddWebRequest(arg0);
				LuaDLL.lua_pushinteger(L, o);
				return 1;
			}
			else if (count == 3 && TypeChecker.CheckTypes(L, 1, typeof(UnityGameFramework.Runtime.WebRequestComponent), typeof(string), typeof(UnityEngine.WWWForm)))
			{
				UnityGameFramework.Runtime.WebRequestComponent obj = (UnityGameFramework.Runtime.WebRequestComponent)ToLua.ToObject(L, 1);
				string arg0 = ToLua.ToString(L, 2);
				UnityEngine.WWWForm arg1 = (UnityEngine.WWWForm)ToLua.ToObject(L, 3);
				int o = obj.AddWebRequest(arg0, arg1);
				LuaDLL.lua_pushinteger(L, o);
				return 1;
			}
			else if (count == 3 && TypeChecker.CheckTypes(L, 1, typeof(UnityGameFramework.Runtime.WebRequestComponent), typeof(string), typeof(byte[])))
			{
				UnityGameFramework.Runtime.WebRequestComponent obj = (UnityGameFramework.Runtime.WebRequestComponent)ToLua.ToObject(L, 1);
				string arg0 = ToLua.ToString(L, 2);
				byte[] arg1 = ToLua.CheckByteBuffer(L, 3);
				int o = obj.AddWebRequest(arg0, arg1);
				LuaDLL.lua_pushinteger(L, o);
				return 1;
			}
			else if (count == 3 && TypeChecker.CheckTypes(L, 1, typeof(UnityGameFramework.Runtime.WebRequestComponent), typeof(string), typeof(object)))
			{
				UnityGameFramework.Runtime.WebRequestComponent obj = (UnityGameFramework.Runtime.WebRequestComponent)ToLua.ToObject(L, 1);
				string arg0 = ToLua.ToString(L, 2);
				object arg1 = ToLua.ToVarObject(L, 3);
				int o = obj.AddWebRequest(arg0, arg1);
				LuaDLL.lua_pushinteger(L, o);
				return 1;
			}
			else if (count == 4 && TypeChecker.CheckTypes(L, 1, typeof(UnityGameFramework.Runtime.WebRequestComponent), typeof(string), typeof(UnityEngine.WWWForm), typeof(object)))
			{
				UnityGameFramework.Runtime.WebRequestComponent obj = (UnityGameFramework.Runtime.WebRequestComponent)ToLua.ToObject(L, 1);
				string arg0 = ToLua.ToString(L, 2);
				UnityEngine.WWWForm arg1 = (UnityEngine.WWWForm)ToLua.ToObject(L, 3);
				object arg2 = ToLua.ToVarObject(L, 4);
				int o = obj.AddWebRequest(arg0, arg1, arg2);
				LuaDLL.lua_pushinteger(L, o);
				return 1;
			}
			else if (count == 4 && TypeChecker.CheckTypes(L, 1, typeof(UnityGameFramework.Runtime.WebRequestComponent), typeof(string), typeof(byte[]), typeof(object)))
			{
				UnityGameFramework.Runtime.WebRequestComponent obj = (UnityGameFramework.Runtime.WebRequestComponent)ToLua.ToObject(L, 1);
				string arg0 = ToLua.ToString(L, 2);
				byte[] arg1 = ToLua.CheckByteBuffer(L, 3);
				object arg2 = ToLua.ToVarObject(L, 4);
				int o = obj.AddWebRequest(arg0, arg1, arg2);
				LuaDLL.lua_pushinteger(L, o);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: UnityGameFramework.Runtime.WebRequestComponent.AddWebRequest");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int RemoveWebRequest(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityGameFramework.Runtime.WebRequestComponent obj = (UnityGameFramework.Runtime.WebRequestComponent)ToLua.CheckObject(L, 1, typeof(UnityGameFramework.Runtime.WebRequestComponent));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			bool o = obj.RemoveWebRequest(arg0);
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int RemoveAllWebRequests(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			UnityGameFramework.Runtime.WebRequestComponent obj = (UnityGameFramework.Runtime.WebRequestComponent)ToLua.CheckObject(L, 1, typeof(UnityGameFramework.Runtime.WebRequestComponent));
			obj.RemoveAllWebRequests();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_TotalAgentCount(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityGameFramework.Runtime.WebRequestComponent obj = (UnityGameFramework.Runtime.WebRequestComponent)o;
			int ret = obj.TotalAgentCount;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index TotalAgentCount on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_FreeAgentCount(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityGameFramework.Runtime.WebRequestComponent obj = (UnityGameFramework.Runtime.WebRequestComponent)o;
			int ret = obj.FreeAgentCount;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index FreeAgentCount on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_WorkingAgentCount(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityGameFramework.Runtime.WebRequestComponent obj = (UnityGameFramework.Runtime.WebRequestComponent)o;
			int ret = obj.WorkingAgentCount;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index WorkingAgentCount on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_WaitingTaskCount(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityGameFramework.Runtime.WebRequestComponent obj = (UnityGameFramework.Runtime.WebRequestComponent)o;
			int ret = obj.WaitingTaskCount;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index WaitingTaskCount on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Timeout(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityGameFramework.Runtime.WebRequestComponent obj = (UnityGameFramework.Runtime.WebRequestComponent)o;
			float ret = obj.Timeout;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index Timeout on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_Timeout(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityGameFramework.Runtime.WebRequestComponent obj = (UnityGameFramework.Runtime.WebRequestComponent)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.Timeout = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index Timeout on a nil value" : e.Message);
		}
	}
}

